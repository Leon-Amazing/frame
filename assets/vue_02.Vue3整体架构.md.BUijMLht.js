import{_ as a,c as o,o as t,ae as r}from"./chunks/framework.DFXnxiOR.js";const p="/frame/assets/1.DZQxdbC2.png",s="/frame/assets/2.DmoXo1Py.png",h=JSON.parse('{"title":"Vue3 整体架构","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"vue/02.Vue3整体架构.md","filePath":"vue/02.Vue3整体架构.md"}'),i={name:"vue/02.Vue3整体架构.md"};function n(u,e,l,c,_,d){return t(),o("div",null,e[0]||(e[0]=[r('<h1 id="vue3-整体架构" tabindex="-1">Vue3 整体架构 <a class="header-anchor" href="#vue3-整体架构" aria-label="Permalink to &quot;Vue3 整体架构&quot;">​</a></h1><h2 id="monorepo-管理项目" tabindex="-1">Monorepo 管理项目 <a class="header-anchor" href="#monorepo-管理项目" aria-label="Permalink to &quot;Monorepo 管理项目&quot;">​</a></h2><p>Monorepo 是管理项目代码的一个方式，指在一个项目仓库(repo)中管理多个模块/包(package)。 Vue3 源码采用 tmonorepo 方式进行管理，将模块拆分到 package 目录中。作为一个个包来管理，这样职责划分更加明确。</p><ul><li>一个仓库可维护多个模块，不用到处找仓库</li><li>方便版本管理和依赖管理，模块之间的引用，调用都非常方便</li></ul><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><p><img src="'+p+'" alt=""></p><p><img src="'+s+'" alt=""></p><h2 id="_2-vue3-采用-typescript" tabindex="-1">2.Vue3 采用 Typescript <a class="header-anchor" href="#_2-vue3-采用-typescript" aria-label="Permalink to &quot;2.Vue3 采用 Typescript&quot;">​</a></h2><p>复杂的框架项目开发，使用类型语言非常有利于代码的维护，在编码期间就可以帮我们做类型检查，避免错误。所以 TS 已经是主流框架的标配~</p><blockquote><p>Vue2 早期采用 Flow 来进行类型检测(Vue2 中对 TS 支持并不友好)， Vue3 源码采用 Typescript 来进行重写。同时 Vue2.7 也采用 TS 进行重写。TS 能对代码提供良好的类型检查，同时也支持复杂的类型推导。</p></blockquote>',10)]))}const V=a(i,[["render",n]]);export{h as __pageData,V as default};
